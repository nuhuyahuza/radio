version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: docker/Dockerfile.prod
    container_name: zaa_radio_app_staging
    restart: unless-stopped
    environment:
      - APP_ENV=staging
      - APP_DEBUG=true
      - DB_HOST=db
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
    depends_on:
      - db
      - redis
    networks:
      - zaa_radio_network

  web:
    image: nginx:alpine
    container_name: zaa_radio_web_staging
    restart: unless-stopped
    ports:
      - "8081:80"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - zaa_radio_network

  db:
    image: mysql:5.7
    container_name: zaa_radio_db_staging
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    volumes:
      - db_data_staging:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./migrations:/docker-entrypoint-initdb.d
    ports:
      - "3307:3306"
    networks:
      - zaa_radio_network

  redis:
    image: redis:alpine
    container_name: zaa_radio_redis_staging
    restart: unless-stopped
    networks:
      - zaa_radio_network

  worker:
    build:
      context: .
      dockerfile: docker/Dockerfile.prod
    container_name: zaa_radio_worker_staging
    restart: unless-stopped
    command: php app/Workers/QueueWorker.php
    environment:
      - APP_ENV=staging
      - APP_DEBUG=true
      - DB_HOST=db
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
    depends_on:
      - db
      - redis
    networks:
      - zaa_radio_network

volumes:
  db_data_staging:

networks:
  zaa_radio_network:
    driver: bridge
